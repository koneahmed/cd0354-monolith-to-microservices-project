language: node_js
node_js:
  - 13

services:
  - docker

# Prétester les installations
install:
  - echo "nothing needs to be installed"

# Scripts à exécuter en guise de tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  # - docker build -t simple-node .
  # - docker tag simple-node koneahmed/simple-node:latest

  # En supposant que le fichier .travis.yml se trouve dans le répertoire du projet et qu'il existe un sous-répertoire distinct pour chaque service.
# Utilisez les commandes `docker-compose` ou les commandes `docker build` individuelles.
# Construire
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker build -t udagram-api-user ./udagram-api-user
  - docker build -t udagram-frontend ./udagram-frontend
  - docker build -t udagram-reverseproxy ./udagram-reverseproxy
# Faites de même pour les trois autres images

# Marquage
  - docker tag udagram-api-feed koneahmed/udagram-api-feed:v1
  - docker tag udagram-api-user koneahmed/udagram-api-user:v1
  - docker tag udagram-frontend koneahmed/udagram-frontend:v1
  - docker tag udagram-reverseproxy koneahmed/udagram-reverseproxy:v1

# Tâches à effectuer après la réussite du processus. Le formatage du nom d'utilisateur et du mot de passe Docker comme indiqué ci-dessous vous permet de vous connecter par programmation sans que le mot de passe soit exposé dans les journaux.
after_success:
  # - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # - docker push koneahmed/simple-node


# Faire de même pour les trois autres images ``
  - bash
# Push
# En supposant que DOCKER_PASSWORD et DOCKER_USERNAME sont définis dans les paramètres du dépôt Travis
  - echo "$DOCKER_PASSWORD". | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push koneahmed/udagram-api-feed:v1
  - docker push koneahmed/udagram-api-user:v1
  - docker push koneahmed/udagram-frontend:v1
  - docker push koneahmed/udagram-reverseproxy:v1
# Faites de même pour les trois autres images